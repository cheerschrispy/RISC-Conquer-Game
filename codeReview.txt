3.4 
Yuhang Liu to Cheng Peng:
Built an overall structure for the server. Some more methods to be added.

3.5
Cheng Peng to Yuhang Liu:
I have already built the basic configuration of this project before. This time He wrote several basic methods such as get or set function. This will help us better use the configuration as an interface to develop our own part.

3.6 
Yuhang Liu to Cheng Peng:
Constructed server side process. Added execution functions including move, action handler and win check. Client needed for an functional end-to-end system.

3.6
Zeyu Li to Yuhang Liu:
Finish the basic part of validation check. 
This part is used by server to check whether the inputs of players are valid. Valid means that the number of movement cannot exceed the total number in that territory, one can only attack other's territories that around its own. 
In this part, he uses hashmap to record the change of numbers in each territory and use BFS to search all the surrounding information.


3.7 
Yuhang Liu to Cheng Peng:
Added dummy Client and test for end-to-end system. Fixed some minor bugs. But connection has errors to be examined.



3.7 
Yuhang Liu to Cheng Peng:
Cheng added a readme to explain the code behavior because he is leaving for spring break.



3.7 
Cheng Peng to Zeyu Li:
Improved the construction of the end-to -end for socket communication. Add flush() when using stream to send information.  Instead of creating multiple input and output stream, which resulted in the AC code error when passing the object Player, he revised to just create some pair to pair streams at the same time point 

But It still has some mess when the second time passing object to be fixed. 


3.8
Zeyu Li to Yuhang Liu:
This part is used to give each player all the information about territories.
As the requirement of the project, each time each user can see all the information as they need. The class named prompts provides all the information of the territories.


3.9 
Alex to Zeyu Li
Now only one pair of steam exists  during the whole lifespan of socket. Which could fix the AC code error. But It still has some mess when the second time passing object to be fixed. It will result in the whole program to exit. 



3.15
Cheng Peng to Zeyu Li:
Fixed the problem by adding reset() to outputstream. The serialization will record the object when it is first time passed and never changed again. Solved this problem by adding reset(). The codes now can achieve basic end to end function. But still not meet the requirements that user can choose soldier numbers to initialize the game at the beginning.



3.18
Cheng Peng to Zeyu Li
Added the function of initialization. After testing, I still found when one player fails, the whole game will stuck, which is not supposed to happen. 



3.18
Zeyu Li to Cheng Peng:
Added function to update people in territories based on the user input from client.



3.18
Zeyu Li to Cheng Peng:
Made changes to enable multiple players for full game testings. Some numbers after attack do not add up.



3.19
Zeyu Li to Cheng Peng:
Wrote function to increase number in each territory by one after each round.



3.19
Zeyu Li to Cheng Peng:
Bug fix for number not decreased after attacking other territory.



3.19 
Alex to Zeyu Li:
There is no prompts for user which one is the winner after the game ended,



3.19
Zeyu Li to Cheng Peng:
Transformed hard-coded territory initializtion to enable different number of players.



3.20
Alex to Zeyu Li:
Added the prompts before all players close their socket and exit. No other error found for now.  



3.21
Zeyu Li to Cheng Peng:
Changed the structure of project for gradle. The CICD did not work out.



3.23
Zeyu Li to Cheng Peng:
Added tests for the executor class.
